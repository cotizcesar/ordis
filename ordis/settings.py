"""
Django settings for ordis project.

Generated by 'django-admin startproject' using Django 2.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
SECRET_KEY = os.environ.get('SECRET_KEY')
DEBUG = True
ALLOWED_HOSTS = []
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.sites',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    'django.contrib.humanize',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.discord',
    'allauth.socialaccount.providers.twitch',
    'easy_thumbnails',
    'bootstrap4',
    'core',
    'market',
    'alerts',
    'codex',
    'pinax.messages',
    'import_export',
    'ckeditor',
]
SITE_ID = 2
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
ROOT_URLCONF = 'ordis.urls'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',   
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.external_data',
                'django.template.context_processors.request',
            ],
        },
    },
]
WSGI_APPLICATION = 'ordis.wsgi.application'
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True
STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
THUMBNAIL_TRANSPARENCY_EXTENSION = 'png'
THUMBNAIL_ALIASES = {
    '': {
        'avatar': {'size': (510, 510), 'crop': 'smart', 'upscale' : True},
        'post': {'size': (540, 0), 'crop': 'smart', 'upscale' : True},        
        'order': {'size': (74, 74), 'crop': 'smart', 'upscale' : True},
        # Codex: Quest, Weapon, Companions Models
        # easy-thumbnails: Different sizes for Warframes image thumbs.
        'item': {'size': (510, 287), 'crop': 'smart', 'upscale' : True},

        # Codex: Warframe Model
        # easy-thumbnails: Different sizes for Warframes image thumbs.
        'warframe': {'size': (510, 906), 'crop': 'smart', 'upscale' : True},
        'warframe_detail': {'size': (510, 906), 'crop': 'smart', 'upscale' : True},
        'warframe_list': {'size': (510, 287), 'crop': '0,0', 'upscale' : True},
        'warframe_market_list': {'size': (510, 287), 'crop': '0,0', 'upscale' : True},
        'warframe_50x50': {'size': (50, 50), 'crop': '0,0', 'upscale' : True},

        # Standard Sizes:
        '44x44': {'size': (44, 44), 'crop': 'smart', 'upscale' : True},
        '50x50': {'size': (50, 50), 'crop': 'smart', 'upscale' : True},
        '66x66': {'size': (66, 66), 'crop': 'smart', 'upscale' : True},
        'warframe_66x66': {'size': (66, 66), 'crop': '0,0', 'upscale' : True},
        '89x89': {'size': (89, 89), 'crop': 'smart', 'upscale' : True},
        '510x287': {'size': (510, 287), 'crop': 'smart', 'upscale' : True},
    },
}
THUMBNAIL_NAMER = 'easy_thumbnails.namers.hashed'
LOGIN_REDIRECT_URL = 'feed'
EMAIL_USE_TLS = True
EMAIL_HOST = os.environ.get('EMAIL_HOST')
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')
EMAIL_PORT = 587
DEFAULT_FROM_EMAIL = os.environ.get('DEFAULT_FROM_EMAIL')
ACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS = True
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_DEFAULT_HTTP_PROTOCOL = 'https'
ACCOUNT_LOGIN_ATTEMPTS_LIMIT = 5
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT = 300
ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE = True
ACCOUNT_LOGOUT_REDIRECT_URL = 'home'
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True
ACCOUNT_LOGIN_ON_PASSWORD_RESET = True
ACCOUNT_SESSION_REMEMBER = True
ACCOUNT_SIGNUP_EMAIL_ENTER_TWICE = True
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = True
ACCOUNT_USERNAME_BLACKLIST = ['admin', 'warframe', 'administrator']
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_MIN_LENGTH = 4
REGISTRATION_OPEN = True
CKEDITOR_CONFIGS = {
    "default": {
        "removePlugins": "stylesheetparser",
        'allowedContent': True,
    }
}
import django_heroku
django_heroku.settings(locals())
